@{ ViewData["Title"] = "Sala 6 - Simón Dice"; }
<body style="background-image: url('/images/fondoSala6.png'); background-size: cover;">
<div class="sala6-container text-center">

  <div class="alert alert-warning" style="color: #3c3c33; background-color: #e9bb58; font-family: 'MedievalSharp', cursive; border-radius: 10px; padding: 15px; margin-bottom: 20px;">
    <p>Se mostrará una secuencia de estandartes. Tu objetivo es repetirla correctamente. Si completas bien las 10 ronda ganas.
  </div>

  <div class="estado-juego mb-4" style="background-color: #00000000;">
    <h3 style="color: #e9bb58; font-family: 'MedievalSharp', cursive;">Ronda <span id="ronda-actual">1</span> de 10</h3>
    <p id="mensaje-estado" class="alert alert-info" style="color: #e9bb58; font-family: 'MedievalSharp', cursive;">¡Preparado!</p>
  </div>

  <div class="botonera-simon" style="background-color: #00000000;">
    <div class="fila-simon">
      <button class="btn-simon rojo" data-color="R"></button>
      <button class="btn-simon azul" data-color="B"></button>
    </div>
    <div class="fila-simon">
      <button class="btn-simon verde" data-color="G"></button>
      <button class="btn-simon amarillo" data-color="Y"></button>
    </div>
  </div>

  <button id="btn-empezar" class="btn btn-primary mt-4" style="color: #e9bb58; font-family: 'MedievalSharp', cursive; background-color: #3c3c33; border: none; border-radius: 10px; padding: 10px;">¡Empezar!</button>
</div>

<form id="form-ganar" method="post" asp-action="Sala6" style="display:none">
  <input type="hidden" name="accion" value="ganar" />
</form>
</body>

@section Scripts {
<script>
  const colores = ['R', 'B', 'G', 'Y'];
  let secuencia = [];
  let secuenciaJugador = [];
  let rondaActual = 1;
  let jugando = false;
  let puedeJugar = false;
  const RONDAS_PARA_GANAR = 10;
  const VELOCIDAD_INICIAL = 300;
  const VELOCIDAD_MINIMA = 50;
  const btnEmpezar = document.getElementById('btn-empezar');
  const mensajeEstado = document.getElementById('mensaje-estado');
  const rondaSpan = document.getElementById('ronda-actual');
  const botones = document.querySelectorAll('.btn-simon');

  function calcularVelocidad() {
    const reduccion = (VELOCIDAD_INICIAL - VELOCIDAD_MINIMA) * (rondaActual - 1) / (RONDAS_PARA_GANAR - 1);
    return Math.max(VELOCIDAD_INICIAL - reduccion, VELOCIDAD_MINIMA);
  }

  function calcularPausa() {
    return calcularVelocidad() * 1.2;
  }

  function iluminarBoton(color) {
    return new Promise((resolve) => {
      const btn = document.querySelector(`.btn-simon[data-color="${color}"]`);
      btn.classList.add('iluminado');
      setTimeout(() => {
        btn.classList.remove('iluminado');
        resolve();
      }, calcularVelocidad());
    });
  }

  async function mostrarSecuencia() {
    puedeJugar = false;
    mensajeEstado.textContent = "¡Observa la secuencia!";
    mensajeEstado.className = "alert alert-info";
    for (let i = 0; i < secuencia.length; i++) {
      await new Promise(resolve => setTimeout(resolve, calcularPausa()));
      await iluminarBoton(secuencia[i]);
    }
    await new Promise(resolve => setTimeout(resolve, calcularPausa()));
    mensajeEstado.textContent = "¡Tu turno!";
    mensajeEstado.className = "alert alert-warning";
    puedeJugar = true;
  }

  function agregarColorAleatorio() {
    const nuevoColor = colores[Math.floor(Math.random() * colores.length)];
    secuencia.push(nuevoColor);
  }

  async function iniciarJuego() {
    secuencia = [];
    secuenciaJugador = [];
    rondaActual = 1;
    rondaSpan.textContent = rondaActual;
    jugando = true;
    btnEmpezar.style.display = 'none';
    agregarColorAleatorio();
    await mostrarSecuencia();
  }

  async function manejarClick(color) {
    if (!jugando || !puedeJugar) return;
    await iluminarBoton(color);
    secuenciaJugador.push(color);
    const posicionActual = secuenciaJugador.length - 1;
    if (secuenciaJugador[posicionActual] !== secuencia[posicionActual]) {
      mensajeEstado.textContent = "¡Perdiste!";
      mensajeEstado.className = "alert alert-danger";
      jugando = false;
      setTimeout(() => {
        window.location.reload();
      }, 1000);
      return;
    }
    if (secuenciaJugador.length === secuencia.length) {
      if (rondaActual === RONDAS_PARA_GANAR) {
        mensajeEstado.textContent = "¡Ganaste!";
        mensajeEstado.className = "alert alert-success";
        document.getElementById('form-ganar').submit();
        return;
      }
      rondaActual++;
      rondaSpan.textContent = rondaActual;
      secuenciaJugador = [];
      agregarColorAleatorio();
      await new Promise(resolve => setTimeout(resolve, 800));
      await mostrarSecuencia();
    }
  }

  btnEmpezar.addEventListener('click', iniciarJuego);
  botones.forEach(btn => {
    btn.addEventListener('click', () => manejarClick(btn.dataset.color));
  });
</script>
}
